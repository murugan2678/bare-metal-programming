
7segment_cathode_0to9999.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000414  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080005a8  080005a8  00002044  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080005a8  080005a8  00002044  2**0
                  CONTENTS
  4 .ARM          00000000  080005a8  080005a8  00002044  2**0
                  CONTENTS
  5 .preinit_array 00000000  080005a8  080005a8  00002044  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080005a8  080005a8  000015a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080005ac  080005ac  000015ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000044  20000000  080005b0  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000044  080005f4  00002044  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000060  080005f4  00002060  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002044  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000225  00000000  00000000  00002074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000134  00000000  00000000  00002299  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  000023d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000004b  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000acb  00000000  00000000  0000248b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000498  00000000  00000000  00002f56  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002eef  00000000  00000000  000033ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000062dd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000010c  00000000  00000000  00006320  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000079  00000000  00000000  0000642c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000044 	.word	0x20000044
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000590 	.word	0x08000590

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000048 	.word	0x20000048
 80001d0:	08000590 	.word	0x08000590

080001d4 <main>:
int arr[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0X7F, 0X6F};

/* main function */

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
    /* function call */

	rcc_config();
 80001d8:	f000 f808 	bl	80001ec <rcc_config>
	peripheral_bus_config();
 80001dc:	f000 f83e 	bl	800025c <peripheral_bus_config>
	gpioa_gpiob_moder_config();
 80001e0:	f000 f856 	bl	8000290 <gpioa_gpiob_moder_config>

	while(1)
	{
		seven_segment_led();
 80001e4:	f000 f89e 	bl	8000324 <seven_segment_led>
 80001e8:	e7fc      	b.n	80001e4 <main+0x10>
	...

080001ec <rcc_config>:
}


/* rcc_config */
void rcc_config()
{
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	*RCC_CR = *RCC_CR & (~0x00010000);
 80001f0:	4b18      	ldr	r3, [pc, #96]	@ (8000254 <rcc_config+0x68>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	681a      	ldr	r2, [r3, #0]
 80001f6:	4b17      	ldr	r3, [pc, #92]	@ (8000254 <rcc_config+0x68>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80001fe:	601a      	str	r2, [r3, #0]

	*RCC_CR = *RCC_CR | (1 << 16);
 8000200:	4b14      	ldr	r3, [pc, #80]	@ (8000254 <rcc_config+0x68>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	681a      	ldr	r2, [r3, #0]
 8000206:	4b13      	ldr	r3, [pc, #76]	@ (8000254 <rcc_config+0x68>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800020e:	601a      	str	r2, [r3, #0]

	while(!(*RCC_CR & 1 << 17) == 0);
 8000210:	bf00      	nop
 8000212:	4b10      	ldr	r3, [pc, #64]	@ (8000254 <rcc_config+0x68>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800021c:	2b00      	cmp	r3, #0
 800021e:	d1f8      	bne.n	8000212 <rcc_config+0x26>

	*RCC_CFGR = *RCC_CFGR & (~0x00000003);
 8000220:	4b0d      	ldr	r3, [pc, #52]	@ (8000258 <rcc_config+0x6c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	681a      	ldr	r2, [r3, #0]
 8000226:	4b0c      	ldr	r3, [pc, #48]	@ (8000258 <rcc_config+0x6c>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f022 0203 	bic.w	r2, r2, #3
 800022e:	601a      	str	r2, [r3, #0]

	*RCC_CFGR = *RCC_CFGR | (1 << 0);
 8000230:	4b09      	ldr	r3, [pc, #36]	@ (8000258 <rcc_config+0x6c>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	681a      	ldr	r2, [r3, #0]
 8000236:	4b08      	ldr	r3, [pc, #32]	@ (8000258 <rcc_config+0x6c>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f042 0201 	orr.w	r2, r2, #1
 800023e:	601a      	str	r2, [r3, #0]

	while(!(*RCC_CFGR & 0x00000004) == 4);
 8000240:	bf00      	nop
 8000242:	4b05      	ldr	r3, [pc, #20]	@ (8000258 <rcc_config+0x6c>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	681b      	ldr	r3, [r3, #0]
}
 8000248:	bf00      	nop
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	20000000 	.word	0x20000000
 8000258:	20000004 	.word	0x20000004

0800025c <peripheral_bus_config>:

/* peripheral_bus_config */

void peripheral_bus_config()
{
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	*RCC_AHB1ENR = *RCC_AHB1ENR | (1 << 0);  /* PORT A enable */
 8000260:	4b0a      	ldr	r3, [pc, #40]	@ (800028c <peripheral_bus_config+0x30>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b09      	ldr	r3, [pc, #36]	@ (800028c <peripheral_bus_config+0x30>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 0201 	orr.w	r2, r2, #1
 800026e:	601a      	str	r2, [r3, #0]
	*RCC_AHB1ENR = *RCC_AHB1ENR | (1 << 1);  /* PORT B enable */
 8000270:	4b06      	ldr	r3, [pc, #24]	@ (800028c <peripheral_bus_config+0x30>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b05      	ldr	r3, [pc, #20]	@ (800028c <peripheral_bus_config+0x30>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f042 0202 	orr.w	r2, r2, #2
 800027e:	601a      	str	r2, [r3, #0]
}
 8000280:	bf00      	nop
 8000282:	46bd      	mov	sp, r7
 8000284:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000288:	4770      	bx	lr
 800028a:	bf00      	nop
 800028c:	20000008 	.word	0x20000008

08000290 <gpioa_gpiob_moder_config>:

/* gpioa_gpiob_moder_config */

void gpioa_gpiob_moder_config()
{
 8000290:	b480      	push	{r7}
 8000292:	b083      	sub	sp, #12
 8000294:	af00      	add	r7, sp, #0
	for(int j = 0; j < 15; j++)
 8000296:	2300      	movs	r3, #0
 8000298:	607b      	str	r3, [r7, #4]
 800029a:	e011      	b.n	80002c0 <gpioa_gpiob_moder_config+0x30>
	{
		*GPIOA_MODER = *GPIOA_MODER | (1 << j);
 800029c:	4b12      	ldr	r3, [pc, #72]	@ (80002e8 <gpioa_gpiob_moder_config+0x58>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	681a      	ldr	r2, [r3, #0]
 80002a2:	2101      	movs	r1, #1
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	fa01 f303 	lsl.w	r3, r1, r3
 80002aa:	4619      	mov	r1, r3
 80002ac:	4b0e      	ldr	r3, [pc, #56]	@ (80002e8 <gpioa_gpiob_moder_config+0x58>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	430a      	orrs	r2, r1
 80002b2:	601a      	str	r2, [r3, #0]
		j = j + 1;
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	3301      	adds	r3, #1
 80002b8:	607b      	str	r3, [r7, #4]
	for(int j = 0; j < 15; j++)
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	3301      	adds	r3, #1
 80002be:	607b      	str	r3, [r7, #4]
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	2b0e      	cmp	r3, #14
 80002c4:	ddea      	ble.n	800029c <gpioa_gpiob_moder_config+0xc>
	}

	*GPIOB_MODER = *GPIOB_MODER | (0x00000415);
 80002c6:	4b09      	ldr	r3, [pc, #36]	@ (80002ec <gpioa_gpiob_moder_config+0x5c>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	4a07      	ldr	r2, [pc, #28]	@ (80002ec <gpioa_gpiob_moder_config+0x5c>)
 80002ce:	6812      	ldr	r2, [r2, #0]
 80002d0:	f443 6382 	orr.w	r3, r3, #1040	@ 0x410
 80002d4:	f043 0305 	orr.w	r3, r3, #5
 80002d8:	6013      	str	r3, [r2, #0]
}
 80002da:	bf00      	nop
 80002dc:	370c      	adds	r7, #12
 80002de:	46bd      	mov	sp, r7
 80002e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e4:	4770      	bx	lr
 80002e6:	bf00      	nop
 80002e8:	2000000c 	.word	0x2000000c
 80002ec:	20000014 	.word	0x20000014

080002f0 <delay_ms>:

/* delay_ms */

void delay_ms(int ms)
{
 80002f0:	b480      	push	{r7}
 80002f2:	b085      	sub	sp, #20
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	6078      	str	r0, [r7, #4]
	for(int i = 0; i < ms * 1000; i++) /* 1000 means 1 milliseconds */
 80002f8:	2300      	movs	r3, #0
 80002fa:	60fb      	str	r3, [r7, #12]
 80002fc:	e003      	b.n	8000306 <delay_ms+0x16>
	{
		__asm("NOP"); /* asm means assembly language. NOP means no operation */
 80002fe:	bf00      	nop
	for(int i = 0; i < ms * 1000; i++) /* 1000 means 1 milliseconds */
 8000300:	68fb      	ldr	r3, [r7, #12]
 8000302:	3301      	adds	r3, #1
 8000304:	60fb      	str	r3, [r7, #12]
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 800030c:	fb02 f303 	mul.w	r3, r2, r3
 8000310:	68fa      	ldr	r2, [r7, #12]
 8000312:	429a      	cmp	r2, r3
 8000314:	dbf3      	blt.n	80002fe <delay_ms+0xe>
	}
}
 8000316:	bf00      	nop
 8000318:	bf00      	nop
 800031a:	3714      	adds	r7, #20
 800031c:	46bd      	mov	sp, r7
 800031e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000322:	4770      	bx	lr

08000324 <seven_segment_led>:

/* seven_segment_led */

void seven_segment_led()
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b086      	sub	sp, #24
 8000328:	af00      	add	r7, sp, #0
	for(int m = 0; m < 10; m++)  /* this for four 7segment */
 800032a:	2300      	movs	r3, #0
 800032c:	617b      	str	r3, [r7, #20]
 800032e:	e0d2      	b.n	80004d6 <seven_segment_led+0x1b2>
	{
		for(int k = 0; k < 10; k++)  /* this for third 7segment */
 8000330:	2300      	movs	r3, #0
 8000332:	613b      	str	r3, [r7, #16]
 8000334:	e0c8      	b.n	80004c8 <seven_segment_led+0x1a4>
		{
			for(int s = 0; s < 10; s++)    /* this for second 7segment */
 8000336:	2300      	movs	r3, #0
 8000338:	60fb      	str	r3, [r7, #12]
 800033a:	e0be      	b.n	80004ba <seven_segment_led+0x196>
			{
				for(int r = 0; r < 10; r++)     /* this for first 7segment */
 800033c:	2300      	movs	r3, #0
 800033e:	60bb      	str	r3, [r7, #8]
 8000340:	e0b4      	b.n	80004ac <seven_segment_led+0x188>
				{
					for(int p = 0; p < 50; p++)  /* this for delay */
 8000342:	2300      	movs	r3, #0
 8000344:	607b      	str	r3, [r7, #4]
 8000346:	e0aa      	b.n	800049e <seven_segment_led+0x17a>
					{
						*GPIOB_ODR = *GPIOB_ODR & (~1 << 1);  /* 1st bit set and clear. set means 1 and clear means 0 */
 8000348:	4b67      	ldr	r3, [pc, #412]	@ (80004e8 <seven_segment_led+0x1c4>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	681a      	ldr	r2, [r3, #0]
 800034e:	4b66      	ldr	r3, [pc, #408]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000350:	681b      	ldr	r3, [r3, #0]
 8000352:	f022 0203 	bic.w	r2, r2, #3
 8000356:	601a      	str	r2, [r3, #0]
					    *GPIOB_ODR = *GPIOB_ODR & (~1 << 2);  /* 2nd bit set and clear. set means 1 and clear means 0 */
 8000358:	4b63      	ldr	r3, [pc, #396]	@ (80004e8 <seven_segment_led+0x1c4>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	681a      	ldr	r2, [r3, #0]
 800035e:	4b62      	ldr	r3, [pc, #392]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000360:	681b      	ldr	r3, [r3, #0]
 8000362:	f022 0207 	bic.w	r2, r2, #7
 8000366:	601a      	str	r2, [r3, #0]
					    *GPIOB_ODR = *GPIOB_ODR & (~1 << 5);  /* 5th bit set and clear. set means 1 and clear means 0 */
 8000368:	4b5f      	ldr	r3, [pc, #380]	@ (80004e8 <seven_segment_led+0x1c4>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	681a      	ldr	r2, [r3, #0]
 800036e:	4b5e      	ldr	r3, [pc, #376]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 8000376:	601a      	str	r2, [r3, #0]
					    *GPIOB_ODR = *GPIOB_ODR | (1 << 0);   /* first 7segment ON means 1. 0th bit set 1 */
 8000378:	4b5b      	ldr	r3, [pc, #364]	@ (80004e8 <seven_segment_led+0x1c4>)
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	681a      	ldr	r2, [r3, #0]
 800037e:	4b5a      	ldr	r3, [pc, #360]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	f042 0201 	orr.w	r2, r2, #1
 8000386:	601a      	str	r2, [r3, #0]
				        *GPIOA_ODR = arr[r];                  /* this for first digit 7segment running */
 8000388:	4a58      	ldr	r2, [pc, #352]	@ (80004ec <seven_segment_led+0x1c8>)
 800038a:	68bb      	ldr	r3, [r7, #8]
 800038c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000390:	4b57      	ldr	r3, [pc, #348]	@ (80004f0 <seven_segment_led+0x1cc>)
 8000392:	681b      	ldr	r3, [r3, #0]
 8000394:	601a      	str	r2, [r3, #0]
				        delay_ms(3);                          /* delay 5 milliseconds Stop */
 8000396:	2003      	movs	r0, #3
 8000398:	f7ff ffaa 	bl	80002f0 <delay_ms>

				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 0);  /* 0th bit set and clear */
 800039c:	4b52      	ldr	r3, [pc, #328]	@ (80004e8 <seven_segment_led+0x1c4>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	681a      	ldr	r2, [r3, #0]
 80003a2:	4b51      	ldr	r3, [pc, #324]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	f022 0201 	bic.w	r2, r2, #1
 80003aa:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 2);  /* 2nd bit set and clear */
 80003ac:	4b4e      	ldr	r3, [pc, #312]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	681a      	ldr	r2, [r3, #0]
 80003b2:	4b4d      	ldr	r3, [pc, #308]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	f022 0207 	bic.w	r2, r2, #7
 80003ba:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 5);  /* 5th bit set and clear */
 80003bc:	4b4a      	ldr	r3, [pc, #296]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	681a      	ldr	r2, [r3, #0]
 80003c2:	4b49      	ldr	r3, [pc, #292]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 80003ca:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR | (1 << 1);   /* second 7segment ON means 1. 1st bit set for 1*/
 80003cc:	4b46      	ldr	r3, [pc, #280]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	4b45      	ldr	r3, [pc, #276]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003d4:	681b      	ldr	r3, [r3, #0]
 80003d6:	f042 0202 	orr.w	r2, r2, #2
 80003da:	601a      	str	r2, [r3, #0]
				        *GPIOA_ODR = arr[s];                  /* this for second digit 7segment running */
 80003dc:	4a43      	ldr	r2, [pc, #268]	@ (80004ec <seven_segment_led+0x1c8>)
 80003de:	68fb      	ldr	r3, [r7, #12]
 80003e0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003e4:	4b42      	ldr	r3, [pc, #264]	@ (80004f0 <seven_segment_led+0x1cc>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	601a      	str	r2, [r3, #0]
				        delay_ms(3);                          /* delay 5 milliseconds Stop */
 80003ea:	2003      	movs	r0, #3
 80003ec:	f7ff ff80 	bl	80002f0 <delay_ms>

				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 0);  /* 0th bit set and clear */
 80003f0:	4b3d      	ldr	r3, [pc, #244]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003f2:	681b      	ldr	r3, [r3, #0]
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	4b3c      	ldr	r3, [pc, #240]	@ (80004e8 <seven_segment_led+0x1c4>)
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	f022 0201 	bic.w	r2, r2, #1
 80003fe:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 1);  /* 1st bit set and clear */
 8000400:	4b39      	ldr	r3, [pc, #228]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	681a      	ldr	r2, [r3, #0]
 8000406:	4b38      	ldr	r3, [pc, #224]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	f022 0203 	bic.w	r2, r2, #3
 800040e:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 5);  /* 5th bit set and clear */
 8000410:	4b35      	ldr	r3, [pc, #212]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	4b34      	ldr	r3, [pc, #208]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f022 023f 	bic.w	r2, r2, #63	@ 0x3f
 800041e:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR | (1 << 2);   /* third 7segment ON mean 1. 2nd bit set for 1 */
 8000420:	4b31      	ldr	r3, [pc, #196]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	4b30      	ldr	r3, [pc, #192]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f042 0204 	orr.w	r2, r2, #4
 800042e:	601a      	str	r2, [r3, #0]
				        *GPIOA_ODR = arr[k];                  /* this for third digit 7segment running */
 8000430:	4a2e      	ldr	r2, [pc, #184]	@ (80004ec <seven_segment_led+0x1c8>)
 8000432:	693b      	ldr	r3, [r7, #16]
 8000434:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000438:	4b2d      	ldr	r3, [pc, #180]	@ (80004f0 <seven_segment_led+0x1cc>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	601a      	str	r2, [r3, #0]
				        delay_ms(3);                          /* delay 5 milliseconds Stop */
 800043e:	2003      	movs	r0, #3
 8000440:	f7ff ff56 	bl	80002f0 <delay_ms>

				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 0);  /* 0th bit set and clear */
 8000444:	4b28      	ldr	r3, [pc, #160]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	681a      	ldr	r2, [r3, #0]
 800044a:	4b27      	ldr	r3, [pc, #156]	@ (80004e8 <seven_segment_led+0x1c4>)
 800044c:	681b      	ldr	r3, [r3, #0]
 800044e:	f022 0201 	bic.w	r2, r2, #1
 8000452:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 1);  /* 1st bit set and clear */
 8000454:	4b24      	ldr	r3, [pc, #144]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	4b23      	ldr	r3, [pc, #140]	@ (80004e8 <seven_segment_led+0x1c4>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	f022 0203 	bic.w	r2, r2, #3
 8000462:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR & (~1 << 2);  /* 5th bit set and clear */
 8000464:	4b20      	ldr	r3, [pc, #128]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000466:	681b      	ldr	r3, [r3, #0]
 8000468:	681a      	ldr	r2, [r3, #0]
 800046a:	4b1f      	ldr	r3, [pc, #124]	@ (80004e8 <seven_segment_led+0x1c4>)
 800046c:	681b      	ldr	r3, [r3, #0]
 800046e:	f022 0207 	bic.w	r2, r2, #7
 8000472:	601a      	str	r2, [r3, #0]
				        *GPIOB_ODR = *GPIOB_ODR | (1 << 5);   /* four 7 segment ON mean 1. 5th bit set for 1 */
 8000474:	4b1c      	ldr	r3, [pc, #112]	@ (80004e8 <seven_segment_led+0x1c4>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	681a      	ldr	r2, [r3, #0]
 800047a:	4b1b      	ldr	r3, [pc, #108]	@ (80004e8 <seven_segment_led+0x1c4>)
 800047c:	681b      	ldr	r3, [r3, #0]
 800047e:	f042 0220 	orr.w	r2, r2, #32
 8000482:	601a      	str	r2, [r3, #0]
				        *GPIOA_ODR = arr[m];                  /* this for fourth digit 7segment running */
 8000484:	4a19      	ldr	r2, [pc, #100]	@ (80004ec <seven_segment_led+0x1c8>)
 8000486:	697b      	ldr	r3, [r7, #20]
 8000488:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800048c:	4b18      	ldr	r3, [pc, #96]	@ (80004f0 <seven_segment_led+0x1cc>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	601a      	str	r2, [r3, #0]
				        delay_ms(3);                          /* delay 5 milliseconds Stop */
 8000492:	2003      	movs	r0, #3
 8000494:	f7ff ff2c 	bl	80002f0 <delay_ms>
					for(int p = 0; p < 50; p++)  /* this for delay */
 8000498:	687b      	ldr	r3, [r7, #4]
 800049a:	3301      	adds	r3, #1
 800049c:	607b      	str	r3, [r7, #4]
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	2b31      	cmp	r3, #49	@ 0x31
 80004a2:	f77f af51 	ble.w	8000348 <seven_segment_led+0x24>
				for(int r = 0; r < 10; r++)     /* this for first 7segment */
 80004a6:	68bb      	ldr	r3, [r7, #8]
 80004a8:	3301      	adds	r3, #1
 80004aa:	60bb      	str	r3, [r7, #8]
 80004ac:	68bb      	ldr	r3, [r7, #8]
 80004ae:	2b09      	cmp	r3, #9
 80004b0:	f77f af47 	ble.w	8000342 <seven_segment_led+0x1e>
			for(int s = 0; s < 10; s++)    /* this for second 7segment */
 80004b4:	68fb      	ldr	r3, [r7, #12]
 80004b6:	3301      	adds	r3, #1
 80004b8:	60fb      	str	r3, [r7, #12]
 80004ba:	68fb      	ldr	r3, [r7, #12]
 80004bc:	2b09      	cmp	r3, #9
 80004be:	f77f af3d 	ble.w	800033c <seven_segment_led+0x18>
		for(int k = 0; k < 10; k++)  /* this for third 7segment */
 80004c2:	693b      	ldr	r3, [r7, #16]
 80004c4:	3301      	adds	r3, #1
 80004c6:	613b      	str	r3, [r7, #16]
 80004c8:	693b      	ldr	r3, [r7, #16]
 80004ca:	2b09      	cmp	r3, #9
 80004cc:	f77f af33 	ble.w	8000336 <seven_segment_led+0x12>
	for(int m = 0; m < 10; m++)  /* this for four 7segment */
 80004d0:	697b      	ldr	r3, [r7, #20]
 80004d2:	3301      	adds	r3, #1
 80004d4:	617b      	str	r3, [r7, #20]
 80004d6:	697b      	ldr	r3, [r7, #20]
 80004d8:	2b09      	cmp	r3, #9
 80004da:	f77f af29 	ble.w	8000330 <seven_segment_led+0xc>
				    }
				}
	        }
	    }
	}
}
 80004de:	bf00      	nop
 80004e0:	bf00      	nop
 80004e2:	3718      	adds	r7, #24
 80004e4:	46bd      	mov	sp, r7
 80004e6:	bd80      	pop	{r7, pc}
 80004e8:	20000018 	.word	0x20000018
 80004ec:	2000001c 	.word	0x2000001c
 80004f0:	20000010 	.word	0x20000010

080004f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004f4:	480d      	ldr	r0, [pc, #52]	@ (800052c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004f6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004fc:	480c      	ldr	r0, [pc, #48]	@ (8000530 <LoopForever+0x6>)
  ldr r1, =_edata
 80004fe:	490d      	ldr	r1, [pc, #52]	@ (8000534 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000500:	4a0d      	ldr	r2, [pc, #52]	@ (8000538 <LoopForever+0xe>)
  movs r3, #0
 8000502:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000504:	e002      	b.n	800050c <LoopCopyDataInit>

08000506 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000506:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000508:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800050a:	3304      	adds	r3, #4

0800050c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800050c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800050e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000510:	d3f9      	bcc.n	8000506 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000512:	4a0a      	ldr	r2, [pc, #40]	@ (800053c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000514:	4c0a      	ldr	r4, [pc, #40]	@ (8000540 <LoopForever+0x16>)
  movs r3, #0
 8000516:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000518:	e001      	b.n	800051e <LoopFillZerobss>

0800051a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800051a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800051c:	3204      	adds	r2, #4

0800051e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800051e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000520:	d3fb      	bcc.n	800051a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000522:	f000 f811 	bl	8000548 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000526:	f7ff fe55 	bl	80001d4 <main>

0800052a <LoopForever>:

LoopForever:
  b LoopForever
 800052a:	e7fe      	b.n	800052a <LoopForever>
  ldr   r0, =_estack
 800052c:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000530:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000534:	20000044 	.word	0x20000044
  ldr r2, =_sidata
 8000538:	080005b0 	.word	0x080005b0
  ldr r2, =_sbss
 800053c:	20000044 	.word	0x20000044
  ldr r4, =_ebss
 8000540:	20000060 	.word	0x20000060

08000544 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000544:	e7fe      	b.n	8000544 <ADC_IRQHandler>
	...

08000548 <__libc_init_array>:
 8000548:	b570      	push	{r4, r5, r6, lr}
 800054a:	4d0d      	ldr	r5, [pc, #52]	@ (8000580 <__libc_init_array+0x38>)
 800054c:	4c0d      	ldr	r4, [pc, #52]	@ (8000584 <__libc_init_array+0x3c>)
 800054e:	1b64      	subs	r4, r4, r5
 8000550:	10a4      	asrs	r4, r4, #2
 8000552:	2600      	movs	r6, #0
 8000554:	42a6      	cmp	r6, r4
 8000556:	d109      	bne.n	800056c <__libc_init_array+0x24>
 8000558:	4d0b      	ldr	r5, [pc, #44]	@ (8000588 <__libc_init_array+0x40>)
 800055a:	4c0c      	ldr	r4, [pc, #48]	@ (800058c <__libc_init_array+0x44>)
 800055c:	f000 f818 	bl	8000590 <_init>
 8000560:	1b64      	subs	r4, r4, r5
 8000562:	10a4      	asrs	r4, r4, #2
 8000564:	2600      	movs	r6, #0
 8000566:	42a6      	cmp	r6, r4
 8000568:	d105      	bne.n	8000576 <__libc_init_array+0x2e>
 800056a:	bd70      	pop	{r4, r5, r6, pc}
 800056c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000570:	4798      	blx	r3
 8000572:	3601      	adds	r6, #1
 8000574:	e7ee      	b.n	8000554 <__libc_init_array+0xc>
 8000576:	f855 3b04 	ldr.w	r3, [r5], #4
 800057a:	4798      	blx	r3
 800057c:	3601      	adds	r6, #1
 800057e:	e7f2      	b.n	8000566 <__libc_init_array+0x1e>
 8000580:	080005a8 	.word	0x080005a8
 8000584:	080005a8 	.word	0x080005a8
 8000588:	080005a8 	.word	0x080005a8
 800058c:	080005ac 	.word	0x080005ac

08000590 <_init>:
 8000590:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000592:	bf00      	nop
 8000594:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000596:	bc08      	pop	{r3}
 8000598:	469e      	mov	lr, r3
 800059a:	4770      	bx	lr

0800059c <_fini>:
 800059c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800059e:	bf00      	nop
 80005a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80005a2:	bc08      	pop	{r3}
 80005a4:	469e      	mov	lr, r3
 80005a6:	4770      	bx	lr
