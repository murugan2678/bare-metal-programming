
7segment_anode_0to9.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000025c  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003f0  080003f0  0000203c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003f0  080003f0  0000203c  2**0
                  CONTENTS
  4 .ARM          00000000  080003f0  080003f0  0000203c  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003f0  080003f0  0000203c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003f0  080003f0  000013f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080003f4  080003f4  000013f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000003c  20000000  080003f8  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000003c  08000434  0000203c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000058  08000434  00002058  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000203c  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001aa  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000135  00000000  00000000  00002216  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  00002350  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000004a  00000000  00000000  000023c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000acb  00000000  00000000  0000240a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000218  00000000  00000000  00002ed5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002ece  00000000  00000000  000030ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00005fbb  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000010c  00000000  00000000  00006000  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000074  00000000  00000000  0000610c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000003c 	.word	0x2000003c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003d8 	.word	0x080003d8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000040 	.word	0x20000040
 80001d0:	080003d8 	.word	0x080003d8

080001d4 <main>:
void seven_segment_led(void);

int arr[10] = {0xC0, 0xF9, 0xA4, 0xB0, 0x99, 0x92, 0x82, 0xF8, 0x80, 0x90};

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	/* function call */
	rcc_config();
 80001d8:	f000 f808 	bl	80001ec <rcc_config>
	peripheral_bus_config();
 80001dc:	f000 f83e 	bl	800025c <peripheral_bus_config>
	gpioa_moder_config();
 80001e0:	f000 f84e 	bl	8000280 <gpioa_moder_config>

	while(1)
	{
		seven_segment_led();
 80001e4:	f000 f88a 	bl	80002fc <seven_segment_led>
 80001e8:	e7fc      	b.n	80001e4 <main+0x10>
	...

080001ec <rcc_config>:
}

/* rcc_config */

void rcc_config()
{
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	*RCC_CR = *RCC_CR & (~0x00010000);
 80001f0:	4b18      	ldr	r3, [pc, #96]	@ (8000254 <rcc_config+0x68>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	681a      	ldr	r2, [r3, #0]
 80001f6:	4b17      	ldr	r3, [pc, #92]	@ (8000254 <rcc_config+0x68>)
 80001f8:	681b      	ldr	r3, [r3, #0]
 80001fa:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
 80001fe:	601a      	str	r2, [r3, #0]

	*RCC_CR = *RCC_CR | (1 << 16);
 8000200:	4b14      	ldr	r3, [pc, #80]	@ (8000254 <rcc_config+0x68>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	681a      	ldr	r2, [r3, #0]
 8000206:	4b13      	ldr	r3, [pc, #76]	@ (8000254 <rcc_config+0x68>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800020e:	601a      	str	r2, [r3, #0]

	while(!(*RCC_CR & 1 << 17) == 0);
 8000210:	bf00      	nop
 8000212:	4b10      	ldr	r3, [pc, #64]	@ (8000254 <rcc_config+0x68>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800021c:	2b00      	cmp	r3, #0
 800021e:	d1f8      	bne.n	8000212 <rcc_config+0x26>

	*RCC_CFGR = *RCC_CFGR & (~0x00000003);
 8000220:	4b0d      	ldr	r3, [pc, #52]	@ (8000258 <rcc_config+0x6c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	681a      	ldr	r2, [r3, #0]
 8000226:	4b0c      	ldr	r3, [pc, #48]	@ (8000258 <rcc_config+0x6c>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f022 0203 	bic.w	r2, r2, #3
 800022e:	601a      	str	r2, [r3, #0]

	*RCC_CFGR = *RCC_CFGR | (1 << 0);
 8000230:	4b09      	ldr	r3, [pc, #36]	@ (8000258 <rcc_config+0x6c>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	681a      	ldr	r2, [r3, #0]
 8000236:	4b08      	ldr	r3, [pc, #32]	@ (8000258 <rcc_config+0x6c>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f042 0201 	orr.w	r2, r2, #1
 800023e:	601a      	str	r2, [r3, #0]

	while(!(*RCC_CFGR & 0x00000004) == 4);
 8000240:	bf00      	nop
 8000242:	4b05      	ldr	r3, [pc, #20]	@ (8000258 <rcc_config+0x6c>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	681b      	ldr	r3, [r3, #0]
}
 8000248:	bf00      	nop
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	20000000 	.word	0x20000000
 8000258:	20000004 	.word	0x20000004

0800025c <peripheral_bus_config>:

/* peripheral_bus_config */
void peripheral_bus_config()
{
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	*RCC_AHB1ENR = *RCC_AHB1ENR | (1 << 0);
 8000260:	4b06      	ldr	r3, [pc, #24]	@ (800027c <peripheral_bus_config+0x20>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b05      	ldr	r3, [pc, #20]	@ (800027c <peripheral_bus_config+0x20>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 0201 	orr.w	r2, r2, #1
 800026e:	601a      	str	r2, [r3, #0]
}
 8000270:	bf00      	nop
 8000272:	46bd      	mov	sp, r7
 8000274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000278:	4770      	bx	lr
 800027a:	bf00      	nop
 800027c:	20000008 	.word	0x20000008

08000280 <gpioa_moder_config>:

/* gpioa_moder_config */
void gpioa_moder_config()
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
	for(int i = 0; i < 15; i++)
 8000286:	2300      	movs	r3, #0
 8000288:	607b      	str	r3, [r7, #4]
 800028a:	e011      	b.n	80002b0 <gpioa_moder_config+0x30>
	{
		*GPIOA_MODER = *GPIOA_MODER | (1 << i);
 800028c:	4b0d      	ldr	r3, [pc, #52]	@ (80002c4 <gpioa_moder_config+0x44>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	681a      	ldr	r2, [r3, #0]
 8000292:	2101      	movs	r1, #1
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	fa01 f303 	lsl.w	r3, r1, r3
 800029a:	4619      	mov	r1, r3
 800029c:	4b09      	ldr	r3, [pc, #36]	@ (80002c4 <gpioa_moder_config+0x44>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	430a      	orrs	r2, r1
 80002a2:	601a      	str	r2, [r3, #0]
		i = i + 1;
 80002a4:	687b      	ldr	r3, [r7, #4]
 80002a6:	3301      	adds	r3, #1
 80002a8:	607b      	str	r3, [r7, #4]
	for(int i = 0; i < 15; i++)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	3301      	adds	r3, #1
 80002ae:	607b      	str	r3, [r7, #4]
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	2b0e      	cmp	r3, #14
 80002b4:	ddea      	ble.n	800028c <gpioa_moder_config+0xc>
	}
}
 80002b6:	bf00      	nop
 80002b8:	bf00      	nop
 80002ba:	370c      	adds	r7, #12
 80002bc:	46bd      	mov	sp, r7
 80002be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c2:	4770      	bx	lr
 80002c4:	2000000c 	.word	0x2000000c

080002c8 <delay_ms>:

/* delay */
void delay_ms(int ms)
{
 80002c8:	b480      	push	{r7}
 80002ca:	b085      	sub	sp, #20
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
	for(int j = 0; j < ms * 4000; j++)
 80002d0:	2300      	movs	r3, #0
 80002d2:	60fb      	str	r3, [r7, #12]
 80002d4:	e003      	b.n	80002de <delay_ms+0x16>
	{
		__asm("NOP");
 80002d6:	bf00      	nop
	for(int j = 0; j < ms * 4000; j++)
 80002d8:	68fb      	ldr	r3, [r7, #12]
 80002da:	3301      	adds	r3, #1
 80002dc:	60fb      	str	r3, [r7, #12]
 80002de:	687b      	ldr	r3, [r7, #4]
 80002e0:	f44f 627a 	mov.w	r2, #4000	@ 0xfa0
 80002e4:	fb02 f303 	mul.w	r3, r2, r3
 80002e8:	68fa      	ldr	r2, [r7, #12]
 80002ea:	429a      	cmp	r2, r3
 80002ec:	dbf3      	blt.n	80002d6 <delay_ms+0xe>
	}
}
 80002ee:	bf00      	nop
 80002f0:	bf00      	nop
 80002f2:	3714      	adds	r7, #20
 80002f4:	46bd      	mov	sp, r7
 80002f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fa:	4770      	bx	lr

080002fc <seven_segment_led>:

/* 7segment led */
void seven_segment_led()
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b082      	sub	sp, #8
 8000300:	af00      	add	r7, sp, #0
	for(int k = 0; k < 10; k++)
 8000302:	2300      	movs	r3, #0
 8000304:	607b      	str	r3, [r7, #4]
 8000306:	e00d      	b.n	8000324 <seven_segment_led+0x28>
	{
		*GPIOA_ODR = arr[k];
 8000308:	4a0a      	ldr	r2, [pc, #40]	@ (8000334 <seven_segment_led+0x38>)
 800030a:	687b      	ldr	r3, [r7, #4]
 800030c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000310:	4b09      	ldr	r3, [pc, #36]	@ (8000338 <seven_segment_led+0x3c>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	601a      	str	r2, [r3, #0]
		delay_ms(500);
 8000316:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 800031a:	f7ff ffd5 	bl	80002c8 <delay_ms>
	for(int k = 0; k < 10; k++)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	3301      	adds	r3, #1
 8000322:	607b      	str	r3, [r7, #4]
 8000324:	687b      	ldr	r3, [r7, #4]
 8000326:	2b09      	cmp	r3, #9
 8000328:	ddee      	ble.n	8000308 <seven_segment_led+0xc>
	}
}
 800032a:	bf00      	nop
 800032c:	bf00      	nop
 800032e:	3708      	adds	r7, #8
 8000330:	46bd      	mov	sp, r7
 8000332:	bd80      	pop	{r7, pc}
 8000334:	20000014 	.word	0x20000014
 8000338:	20000010 	.word	0x20000010

0800033c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800033c:	480d      	ldr	r0, [pc, #52]	@ (8000374 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800033e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000340:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000344:	480c      	ldr	r0, [pc, #48]	@ (8000378 <LoopForever+0x6>)
  ldr r1, =_edata
 8000346:	490d      	ldr	r1, [pc, #52]	@ (800037c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000348:	4a0d      	ldr	r2, [pc, #52]	@ (8000380 <LoopForever+0xe>)
  movs r3, #0
 800034a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800034c:	e002      	b.n	8000354 <LoopCopyDataInit>

0800034e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800034e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000350:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000352:	3304      	adds	r3, #4

08000354 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000354:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000356:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000358:	d3f9      	bcc.n	800034e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800035a:	4a0a      	ldr	r2, [pc, #40]	@ (8000384 <LoopForever+0x12>)
  ldr r4, =_ebss
 800035c:	4c0a      	ldr	r4, [pc, #40]	@ (8000388 <LoopForever+0x16>)
  movs r3, #0
 800035e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000360:	e001      	b.n	8000366 <LoopFillZerobss>

08000362 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000362:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000364:	3204      	adds	r2, #4

08000366 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000366:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000368:	d3fb      	bcc.n	8000362 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800036a:	f000 f811 	bl	8000390 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800036e:	f7ff ff31 	bl	80001d4 <main>

08000372 <LoopForever>:

LoopForever:
  b LoopForever
 8000372:	e7fe      	b.n	8000372 <LoopForever>
  ldr   r0, =_estack
 8000374:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 8000378:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800037c:	2000003c 	.word	0x2000003c
  ldr r2, =_sidata
 8000380:	080003f8 	.word	0x080003f8
  ldr r2, =_sbss
 8000384:	2000003c 	.word	0x2000003c
  ldr r4, =_ebss
 8000388:	20000058 	.word	0x20000058

0800038c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800038c:	e7fe      	b.n	800038c <ADC_IRQHandler>
	...

08000390 <__libc_init_array>:
 8000390:	b570      	push	{r4, r5, r6, lr}
 8000392:	4d0d      	ldr	r5, [pc, #52]	@ (80003c8 <__libc_init_array+0x38>)
 8000394:	4c0d      	ldr	r4, [pc, #52]	@ (80003cc <__libc_init_array+0x3c>)
 8000396:	1b64      	subs	r4, r4, r5
 8000398:	10a4      	asrs	r4, r4, #2
 800039a:	2600      	movs	r6, #0
 800039c:	42a6      	cmp	r6, r4
 800039e:	d109      	bne.n	80003b4 <__libc_init_array+0x24>
 80003a0:	4d0b      	ldr	r5, [pc, #44]	@ (80003d0 <__libc_init_array+0x40>)
 80003a2:	4c0c      	ldr	r4, [pc, #48]	@ (80003d4 <__libc_init_array+0x44>)
 80003a4:	f000 f818 	bl	80003d8 <_init>
 80003a8:	1b64      	subs	r4, r4, r5
 80003aa:	10a4      	asrs	r4, r4, #2
 80003ac:	2600      	movs	r6, #0
 80003ae:	42a6      	cmp	r6, r4
 80003b0:	d105      	bne.n	80003be <__libc_init_array+0x2e>
 80003b2:	bd70      	pop	{r4, r5, r6, pc}
 80003b4:	f855 3b04 	ldr.w	r3, [r5], #4
 80003b8:	4798      	blx	r3
 80003ba:	3601      	adds	r6, #1
 80003bc:	e7ee      	b.n	800039c <__libc_init_array+0xc>
 80003be:	f855 3b04 	ldr.w	r3, [r5], #4
 80003c2:	4798      	blx	r3
 80003c4:	3601      	adds	r6, #1
 80003c6:	e7f2      	b.n	80003ae <__libc_init_array+0x1e>
 80003c8:	080003f0 	.word	0x080003f0
 80003cc:	080003f0 	.word	0x080003f0
 80003d0:	080003f0 	.word	0x080003f0
 80003d4:	080003f4 	.word	0x080003f4

080003d8 <_init>:
 80003d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003da:	bf00      	nop
 80003dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003de:	bc08      	pop	{r3}
 80003e0:	469e      	mov	lr, r3
 80003e2:	4770      	bx	lr

080003e4 <_fini>:
 80003e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003e6:	bf00      	nop
 80003e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003ea:	bc08      	pop	{r3}
 80003ec:	469e      	mov	lr, r3
 80003ee:	4770      	bx	lr
