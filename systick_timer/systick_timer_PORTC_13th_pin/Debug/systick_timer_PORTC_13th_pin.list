
systick_timer_PORTC_13th_pin.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000270  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000404  08000404  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000404  08000404  0000201c  2**0
                  CONTENTS
  4 .ARM          00000000  08000404  08000404  0000201c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000404  08000404  0000201c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000404  08000404  00001404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000408  08000408  00001408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000001c  20000000  0800040c  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  2000001c  08000428  0000201c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000038  08000428  00002038  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000201c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000162  00000000  00000000  0000204c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000f0  00000000  00000000  000021ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000070  00000000  00000000  000022a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000004a  00000000  00000000  00002310  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000adb  00000000  00000000  0000235a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000001c4  00000000  00000000  00002e35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00002f0c  00000000  00000000  00002ff9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00005f05  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000000fc  00000000  00000000  00005f48  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000007d  00000000  00000000  00006044  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	2000001c 	.word	0x2000001c
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080003ec 	.word	0x080003ec

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000020 	.word	0x20000020
 80001d0:	080003ec 	.word	0x080003ec

080001d4 <main>:

#define RELOAD_VALUE 1600000   /* 100ms milliseconds */
//#define RELOAD_VALUE 3200000   /* 200ms milliseconds */

int main(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
	rcc_config();
 80001d8:	f000 f808 	bl	80001ec <rcc_config>
	peripheral_bus_config();
 80001dc:	f000 f83e 	bl	800025c <peripheral_bus_config>
	gpioc_moder_config();
 80001e0:	f000 f84e 	bl	8000280 <gpioc_moder_config>
	while(1)
	{
		led_blinking();
 80001e4:	f000 f894 	bl	8000310 <led_blinking>
 80001e8:	e7fc      	b.n	80001e4 <main+0x10>
	...

080001ec <rcc_config>:
}

/* rcc config */

void rcc_config(void)
{
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	/* Reset clock control (RCC_CR) clock control register */

	/* set and clear 16th bit. HSEON */
	*RCC_CR &= (~1 << 16);
 80001f0:	4b18      	ldr	r3, [pc, #96]	@ (8000254 <rcc_config+0x68>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	681b      	ldr	r3, [r3, #0]
 80001f6:	4a17      	ldr	r2, [pc, #92]	@ (8000254 <rcc_config+0x68>)
 80001f8:	6812      	ldr	r2, [r2, #0]
 80001fa:	0c5b      	lsrs	r3, r3, #17
 80001fc:	045b      	lsls	r3, r3, #17
 80001fe:	6013      	str	r3, [r2, #0]

	/* 16th bit set 1. HSEON : HSE clock enable. 1 : HSE oscillator ON */
	*RCC_CR |= (1 << 16);
 8000200:	4b14      	ldr	r3, [pc, #80]	@ (8000254 <rcc_config+0x68>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	681a      	ldr	r2, [r3, #0]
 8000206:	4b13      	ldr	r3, [pc, #76]	@ (8000254 <rcc_config+0x68>)
 8000208:	681b      	ldr	r3, [r3, #0]
 800020a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800020e:	601a      	str	r2, [r3, #0]

	/* 17th bit set 1. HSERDY : HSE clock enable. 1 : HSE oscillator ready. checking for HSE oscillator ready or not */
    while(!(*RCC_CR & 1 << 17) == 0);
 8000210:	bf00      	nop
 8000212:	4b10      	ldr	r3, [pc, #64]	@ (8000254 <rcc_config+0x68>)
 8000214:	681b      	ldr	r3, [r3, #0]
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800021c:	2b00      	cmp	r3, #0
 800021e:	d1f8      	bne.n	8000212 <rcc_config+0x26>

	/* Reset clock control (RCC_CFGR) clock configuration register */

	/* set and clear 0th bit and 1th bit. SW, 11 : not allowed */
   // *RCC_CFGR &= ~(0x00000003);
	*RCC_CFGR &= (~0x00000003);
 8000220:	4b0d      	ldr	r3, [pc, #52]	@ (8000258 <rcc_config+0x6c>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	681a      	ldr	r2, [r3, #0]
 8000226:	4b0c      	ldr	r3, [pc, #48]	@ (8000258 <rcc_config+0x6c>)
 8000228:	681b      	ldr	r3, [r3, #0]
 800022a:	f022 0203 	bic.w	r2, r2, #3
 800022e:	601a      	str	r2, [r3, #0]

	/* 0th bit set 1. SW : system clock switch. 01 : HSE oscillator selected as system clock */
	*RCC_CFGR |= (1 << 0);
 8000230:	4b09      	ldr	r3, [pc, #36]	@ (8000258 <rcc_config+0x6c>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	681a      	ldr	r2, [r3, #0]
 8000236:	4b08      	ldr	r3, [pc, #32]	@ (8000258 <rcc_config+0x6c>)
 8000238:	681b      	ldr	r3, [r3, #0]
 800023a:	f042 0201 	orr.w	r2, r2, #1
 800023e:	601a      	str	r2, [r3, #0]

	/* 2nd bit set 1. SWS : system clock switch status. 01 : HSE oscillator used as system clock */
	while(!(*RCC_CFGR & 0x00000004) == 4);
 8000240:	bf00      	nop
 8000242:	4b05      	ldr	r3, [pc, #20]	@ (8000258 <rcc_config+0x6c>)
 8000244:	681b      	ldr	r3, [r3, #0]
 8000246:	681b      	ldr	r3, [r3, #0]
}
 8000248:	bf00      	nop
 800024a:	46bd      	mov	sp, r7
 800024c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000250:	4770      	bx	lr
 8000252:	bf00      	nop
 8000254:	20000000 	.word	0x20000000
 8000258:	20000004 	.word	0x20000004

0800025c <peripheral_bus_config>:

/* peripheral bus config */

void peripheral_bus_config(void)
{
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
	/* Advanced High Bus 1 (RCC_AHB1ENR) peripheral clock enable register */
	/* select POART C. GPIOCEN : IO port clock enable. 2nd bit set 1 */
	*RCC_AHB1ENR |= (1 << 2);
 8000260:	4b06      	ldr	r3, [pc, #24]	@ (800027c <peripheral_bus_config+0x20>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b05      	ldr	r3, [pc, #20]	@ (800027c <peripheral_bus_config+0x20>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 0204 	orr.w	r2, r2, #4
 800026e:	601a      	str	r2, [r3, #0]
}
 8000270:	bf00      	nop
 8000272:	46bd      	mov	sp, r7
 8000274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000278:	4770      	bx	lr
 800027a:	bf00      	nop
 800027c:	20000008 	.word	0x20000008

08000280 <gpioc_moder_config>:

/* gpioc moder config */

void gpioc_moder_config(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	/* General purpose input and output (GPIOC_MODER) port mode register */

	/* select PORTC 13th pin and select MODER13. select 01 : General purpose output mode. set 26th bit 1 */
	*GPIOC_MODER |= (1 << 26);
 8000284:	4b06      	ldr	r3, [pc, #24]	@ (80002a0 <gpioc_moder_config+0x20>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b05      	ldr	r3, [pc, #20]	@ (80002a0 <gpioc_moder_config+0x20>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8000292:	601a      	str	r2, [r3, #0]
}
 8000294:	bf00      	nop
 8000296:	46bd      	mov	sp, r7
 8000298:	f85d 7b04 	ldr.w	r7, [sp], #4
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop
 80002a0:	2000000c 	.word	0x2000000c

080002a4 <systick_timer_delay>:

/* SysTick timer delay config */

void systick_timer_delay(int val)
{
 80002a4:	b480      	push	{r7}
 80002a6:	b083      	sub	sp, #12
 80002a8:	af00      	add	r7, sp, #0
 80002aa:	6078      	str	r0, [r7, #4]
    /* SysTick timer (STK). 24-bit system timer */

	/* 24-bit set and clear load register */

	*STK_LOAD &= (~0x00FFFFFF);
 80002ac:	4b16      	ldr	r3, [pc, #88]	@ (8000308 <systick_timer_delay+0x64>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	681a      	ldr	r2, [r3, #0]
 80002b2:	4b15      	ldr	r3, [pc, #84]	@ (8000308 <systick_timer_delay+0x64>)
 80002b4:	681b      	ldr	r3, [r3, #0]
 80002b6:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 80002ba:	601a      	str	r2, [r3, #0]

	/* step 1 ---> reload value. (STK_LOAD) SysTick reload value register */

	*STK_LOAD |= val;
 80002bc:	4b12      	ldr	r3, [pc, #72]	@ (8000308 <systick_timer_delay+0x64>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	6819      	ldr	r1, [r3, #0]
 80002c2:	687a      	ldr	r2, [r7, #4]
 80002c4:	4b10      	ldr	r3, [pc, #64]	@ (8000308 <systick_timer_delay+0x64>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	430a      	orrs	r2, r1
 80002ca:	601a      	str	r2, [r3, #0]

	/* step 2 ---> counter enable 0th bit set 1. (STK_CTRL) SysTick control and status register */
	*STK_CTRL |=  (5 << 0);
 80002cc:	4b0f      	ldr	r3, [pc, #60]	@ (800030c <systick_timer_delay+0x68>)
 80002ce:	681b      	ldr	r3, [r3, #0]
 80002d0:	681a      	ldr	r2, [r3, #0]
 80002d2:	4b0e      	ldr	r3, [pc, #56]	@ (800030c <systick_timer_delay+0x68>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	f042 0205 	orr.w	r2, r2, #5
 80002da:	601a      	str	r2, [r3, #0]

	/* step 3 ---> program control and register value. STK_(CTRL) */
	/* 16th bit wait for COUNTFLAG. if timer counted to 0 since last time was read. Return 1 */
	while(!(*STK_CTRL & (1 << 16)));
 80002dc:	bf00      	nop
 80002de:	4b0b      	ldr	r3, [pc, #44]	@ (800030c <systick_timer_delay+0x68>)
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80002e8:	2b00      	cmp	r3, #0
 80002ea:	d0f8      	beq.n	80002de <systick_timer_delay+0x3a>

	/* step 4 ---> COUTNFLAG clear */
	*STK_CTRL &= (~1 << 16);
 80002ec:	4b07      	ldr	r3, [pc, #28]	@ (800030c <systick_timer_delay+0x68>)
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4a06      	ldr	r2, [pc, #24]	@ (800030c <systick_timer_delay+0x68>)
 80002f4:	6812      	ldr	r2, [r2, #0]
 80002f6:	0c5b      	lsrs	r3, r3, #17
 80002f8:	045b      	lsls	r3, r3, #17
 80002fa:	6013      	str	r3, [r2, #0]
}
 80002fc:	bf00      	nop
 80002fe:	370c      	adds	r7, #12
 8000300:	46bd      	mov	sp, r7
 8000302:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000306:	4770      	bx	lr
 8000308:	20000018 	.word	0x20000018
 800030c:	20000014 	.word	0x20000014

08000310 <led_blinking>:

/* led config for ODR */

void led_blinking(void)
{
 8000310:	b580      	push	{r7, lr}
 8000312:	af00      	add	r7, sp, #0
    /* General Purpose Input and Output (GPIOC_ODR) port output data register */
	/* select the ODR13 set 13th pin, PORTC 13th pin pull up register there */
    *GPIOC_ODR &= (~1 << 13);  /* led on */
 8000314:	4b0c      	ldr	r3, [pc, #48]	@ (8000348 <led_blinking+0x38>)
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	4a0b      	ldr	r2, [pc, #44]	@ (8000348 <led_blinking+0x38>)
 800031c:	6812      	ldr	r2, [r2, #0]
 800031e:	f423 537f 	bic.w	r3, r3, #16320	@ 0x3fc0
 8000322:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8000326:	6013      	str	r3, [r2, #0]
    systick_timer_delay(RELOAD_VALUE);  /* delay for 100ms milliseconds stop */
 8000328:	4808      	ldr	r0, [pc, #32]	@ (800034c <led_blinking+0x3c>)
 800032a:	f7ff ffbb 	bl	80002a4 <systick_timer_delay>

    *GPIOC_ODR |= (1 << 13);  /* led off */
 800032e:	4b06      	ldr	r3, [pc, #24]	@ (8000348 <led_blinking+0x38>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	681a      	ldr	r2, [r3, #0]
 8000334:	4b04      	ldr	r3, [pc, #16]	@ (8000348 <led_blinking+0x38>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 800033c:	601a      	str	r2, [r3, #0]
	systick_timer_delay(RELOAD_VALUE);  /* delay for 100ms milliseconds stop */
 800033e:	4803      	ldr	r0, [pc, #12]	@ (800034c <led_blinking+0x3c>)
 8000340:	f7ff ffb0 	bl	80002a4 <systick_timer_delay>
}
 8000344:	bf00      	nop
 8000346:	bd80      	pop	{r7, pc}
 8000348:	20000010 	.word	0x20000010
 800034c:	00186a00 	.word	0x00186a00

08000350 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000350:	480d      	ldr	r0, [pc, #52]	@ (8000388 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000352:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000354:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000358:	480c      	ldr	r0, [pc, #48]	@ (800038c <LoopForever+0x6>)
  ldr r1, =_edata
 800035a:	490d      	ldr	r1, [pc, #52]	@ (8000390 <LoopForever+0xa>)
  ldr r2, =_sidata
 800035c:	4a0d      	ldr	r2, [pc, #52]	@ (8000394 <LoopForever+0xe>)
  movs r3, #0
 800035e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000360:	e002      	b.n	8000368 <LoopCopyDataInit>

08000362 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000362:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000364:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000366:	3304      	adds	r3, #4

08000368 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000368:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800036a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800036c:	d3f9      	bcc.n	8000362 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800036e:	4a0a      	ldr	r2, [pc, #40]	@ (8000398 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000370:	4c0a      	ldr	r4, [pc, #40]	@ (800039c <LoopForever+0x16>)
  movs r3, #0
 8000372:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000374:	e001      	b.n	800037a <LoopFillZerobss>

08000376 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000376:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000378:	3204      	adds	r2, #4

0800037a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800037a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800037c:	d3fb      	bcc.n	8000376 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800037e:	f000 f811 	bl	80003a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000382:	f7ff ff27 	bl	80001d4 <main>

08000386 <LoopForever>:

LoopForever:
  b LoopForever
 8000386:	e7fe      	b.n	8000386 <LoopForever>
  ldr   r0, =_estack
 8000388:	20010000 	.word	0x20010000
  ldr r0, =_sdata
 800038c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000390:	2000001c 	.word	0x2000001c
  ldr r2, =_sidata
 8000394:	0800040c 	.word	0x0800040c
  ldr r2, =_sbss
 8000398:	2000001c 	.word	0x2000001c
  ldr r4, =_ebss
 800039c:	20000038 	.word	0x20000038

080003a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a0:	e7fe      	b.n	80003a0 <ADC_IRQHandler>
	...

080003a4 <__libc_init_array>:
 80003a4:	b570      	push	{r4, r5, r6, lr}
 80003a6:	4d0d      	ldr	r5, [pc, #52]	@ (80003dc <__libc_init_array+0x38>)
 80003a8:	4c0d      	ldr	r4, [pc, #52]	@ (80003e0 <__libc_init_array+0x3c>)
 80003aa:	1b64      	subs	r4, r4, r5
 80003ac:	10a4      	asrs	r4, r4, #2
 80003ae:	2600      	movs	r6, #0
 80003b0:	42a6      	cmp	r6, r4
 80003b2:	d109      	bne.n	80003c8 <__libc_init_array+0x24>
 80003b4:	4d0b      	ldr	r5, [pc, #44]	@ (80003e4 <__libc_init_array+0x40>)
 80003b6:	4c0c      	ldr	r4, [pc, #48]	@ (80003e8 <__libc_init_array+0x44>)
 80003b8:	f000 f818 	bl	80003ec <_init>
 80003bc:	1b64      	subs	r4, r4, r5
 80003be:	10a4      	asrs	r4, r4, #2
 80003c0:	2600      	movs	r6, #0
 80003c2:	42a6      	cmp	r6, r4
 80003c4:	d105      	bne.n	80003d2 <__libc_init_array+0x2e>
 80003c6:	bd70      	pop	{r4, r5, r6, pc}
 80003c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003cc:	4798      	blx	r3
 80003ce:	3601      	adds	r6, #1
 80003d0:	e7ee      	b.n	80003b0 <__libc_init_array+0xc>
 80003d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d6:	4798      	blx	r3
 80003d8:	3601      	adds	r6, #1
 80003da:	e7f2      	b.n	80003c2 <__libc_init_array+0x1e>
 80003dc:	08000404 	.word	0x08000404
 80003e0:	08000404 	.word	0x08000404
 80003e4:	08000404 	.word	0x08000404
 80003e8:	08000408 	.word	0x08000408

080003ec <_init>:
 80003ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ee:	bf00      	nop
 80003f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003f2:	bc08      	pop	{r3}
 80003f4:	469e      	mov	lr, r3
 80003f6:	4770      	bx	lr

080003f8 <_fini>:
 80003f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003fa:	bf00      	nop
 80003fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003fe:	bc08      	pop	{r3}
 8000400:	469e      	mov	lr, r3
 8000402:	4770      	bx	lr
